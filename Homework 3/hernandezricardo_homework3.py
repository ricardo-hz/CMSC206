# -*- coding: utf-8 -*-
"""HernandezRicardo_Homework3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LDOt4eFGnoNdH6w1CoqNpsLt7G24SSn5
"""

#Author: Ricardo Hernandez
#Course: CMSC206
#Professor: Gary Thai
#Due Date: 9/25/2024

#Import needed for pi constant
import math

#This function is responsible for calculating the area of a shape
#valid arguments are "square", "rectangle", "circle", and "triangle". Arguments
#are not case sensitive
def calculateArea(shape):
  if shape.lower() == "rectangle" or shape.lower() == "square":
    print("What is the length?")
    length = float(input())
    print("What is the width?")
    width = float(input())
    #Absolute values used to avoid negative area
    return("Area: {}".format(abs(length * width)))
  elif shape.lower() == "triangle":
    print("What is the base?")
    base = float(input())
    print("What is the height?")
    height = float(input())
    return("Area: {}".format(abs(base * height) / 2))
  #Enhancement: Third shape
  elif shape.lower() == "circle":
    print("What is the radius of the circle?")
    radius = (abs(float(input())))
    return("Area: {}".format(math.pi * (radius ** 2)))
  else:
    return("Invalid entry or formula not yet implemented")

#This function is responsible for generating a number summary in the below
#format. Valid arguments are any numbers.
#Format:
#Sum
#Average
#Max
#Min
#Number of even numbers
#Number of odd numbers
def summarizeNumbers(*numbers):
  sum = 0
  numElements = 0
  #Known issue: The max and min variables will cause the program to crash if no
  #argument is entered. This is because these variables attempt to assume the
  #value of the first argument to complete the algorithm
  max = numbers[0]
  min = numbers[0]
  evenNumbers = 0
  oddNumbers = 0

  for number in numbers:
    sum += number
    numElements += 1
    if number > max:
      max = number
    if number < min:
      min = number
    #Enhancement: Count the amount of even and odd numbers
    if number % 2 == 0:
      evenNumbers += 1
    else:
      oddNumbers += 1
  return("Sum: {}\nAverage: {}\nMax: {}\nMin: {}\n# Evens: {}\n# Odds: {}".format(sum, sum/numElements, max, min, evenNumbers, oddNumbers))

print(summarizeNumbers(-1002, 41, 5930, 10, 11, 93, 91, 6))
print()
print(calculateArea("Circle"))